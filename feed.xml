<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://leomrtns.github.io/jupyterblog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://leomrtns.github.io/jupyterblog/" rel="alternate" type="text/html" /><updated>2022-08-16T08:32:05-05:00</updated><id>https://leomrtns.github.io/jupyterblog/feed.xml</id><title type="html">Leo Martins Binfie Notes</title><subtitle>Notes on Evolutionary Computational Biology and Bioinformatics</subtitle><entry><title type="html">Not all invariant sites are created the same</title><link href="https://leomrtns.github.io/jupyterblog/phylogenetics/2022/08/16/lnl_uncertainty.html" rel="alternate" type="text/html" title="Not all invariant sites are created the same" /><published>2022-08-16T00:00:00-05:00</published><updated>2022-08-16T00:00:00-05:00</updated><id>https://leomrtns.github.io/jupyterblog/phylogenetics/2022/08/16/lnl_uncertainty</id><author><name></name></author><category term="phylogenetics" /><summary type="html"><![CDATA[Why removing invariant sites is usually a bad idea for maximum likelihood tree inference]]></summary></entry><entry><title type="html">Hash functions and pseudo-random number generation</title><link href="https://leomrtns.github.io/jupyterblog/c/2022/04/01/o5.random_hash.html" rel="alternate" type="text/html" title="Hash functions and pseudo-random number generation" /><published>2022-04-01T00:00:00-05:00</published><updated>2022-04-01T00:00:00-05:00</updated><id>https://leomrtns.github.io/jupyterblog/c/2022/04/01/o5.random_hash</id><author><name>Leo Martins</name></author><category term="C" /><summary type="html"><![CDATA[Here I show two small tests, one with generation of an initial set of random numbers, and another on `popcount()` speeds, implemented in the low-level phylogenetic library biomcmc-lib.]]></summary></entry><entry><title type="html">kalign3 as a library and colour printing</title><link href="https://leomrtns.github.io/jupyterblog/c/2022/03/01/o4.kalign3.html" rel="alternate" type="text/html" title="kalign3 as a library and colour printing" /><published>2022-03-01T00:00:00-06:00</published><updated>2022-03-01T00:00:00-06:00</updated><id>https://leomrtns.github.io/jupyterblog/c/2022/03/01/o4.kalign3</id><author><name>Leo Martins</name></author><category term="C" /><summary type="html"><![CDATA[How the multiple sequence alignment kalign3 is implemented in the low-level phylogenetic library biomcmc-lib, and how to use colours in C.]]></summary></entry><entry><title type="html">Minimal example of a rolling hash</title><link href="https://leomrtns.github.io/jupyterblog/c/2022/02/01/o3.rollinghash.html" rel="alternate" type="text/html" title="Minimal example of a rolling hash" /><published>2022-02-01T00:00:00-06:00</published><updated>2022-02-01T00:00:00-06:00</updated><id>https://leomrtns.github.io/jupyterblog/c/2022/02/01/o3.rollinghash</id><author><name>Leo Martins</name></author><category term="C" /><summary type="html"><![CDATA[Description of a current implementation of a rolling hash in the low-level phylogenetic library biomcmc-lib]]></summary></entry><entry><title type="html">Quantile functions implemented in biomcmc-lib</title><link href="https://leomrtns.github.io/jupyterblog/c/2022/01/01/o2.quantile.html" rel="alternate" type="text/html" title="Quantile functions implemented in biomcmc-lib" /><published>2022-01-01T00:00:00-06:00</published><updated>2022-01-01T00:00:00-06:00</updated><id>https://leomrtns.github.io/jupyterblog/c/2022/01/01/o2.quantile</id><author><name>Leo Martins</name></author><category term="C" /><summary type="html"><![CDATA[Description of how quantile finding is implemented in the low-level phylogenetic library biomcmc-lib]]></summary></entry></feed>